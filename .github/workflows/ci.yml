name: CI Validation

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: "1.25"

permissions:
  contents: read
  pull-requests: read

jobs:
  validate-commits:
    name: Validate Conventional Commits
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Commitlint
        uses: wagoid/commitlint-github-action@v6
        with:
          configFile: .commitlintrc.json

  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run golangci-lint via Dagger
        uses: dagger/dagger-for-github@v7
        with:
          version: "latest"
          module: "github.com/sagikazarmark/daggerverse/go@v0.9.0"
          call: "with-source --source=. exec --args=go,run,github.com/golangci/golangci-lint/cmd/golangci-lint@latest,run,./..."

      - name: Run Go tests via Dagger
        uses: dagger/dagger-for-github@v7
        with:
          version: "latest"
          module: "github.com/sagikazarmark/daggerverse/go@v0.9.0"
          call: "with-source --source=. exec --args=go,test,./...,--race,--short"

      - name: Run vulnerability scan via Dagger
        uses: dagger/dagger-for-github@v7
        continue-on-error: true  # Temporary: Ollama v0.12.6 has unfixed CVEs (see SECURITY.md)
        with:
          version: "latest"
          module: "github.com/sagikazarmark/daggerverse/go@v0.9.0"
          call: "with-source --source=. exec --args=go,run,golang.org/x/vuln/cmd/govulncheck@latest,./..."

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage.out
          retention-days: 30

  build-test:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - darwin/amd64
          - darwin/arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set platform variables
        id: platform
        run: |
          PLATFORM="${{ matrix.platform }}"
          OS=$(echo $PLATFORM | cut -d'/' -f1)
          ARCH=$(echo $PLATFORM | cut -d'/' -f2)
          echo "os=$OS" >> $GITHUB_OUTPUT
          echo "arch=$ARCH" >> $GITHUB_OUTPUT
          echo "binary_name=scia-$OS-$ARCH" >> $GITHUB_OUTPUT

      - name: Build Go binary
        uses: dagger/dagger-for-github@v7
        with:
          version: "latest"
          module: "github.com/sagikazarmark/daggerverse/go@v0.9.0"
          call: >-
            with-platform --platform=${{ matrix.platform }}
            with-cgo-disabled
            with-source --source=.
            build --pkg=. --ldflags="-w -s"
            export --path=./bin/${{ steps.platform.outputs.binary_name }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.platform.outputs.binary_name }}
          path: ./bin/
          retention-days: 7


  # Status check for required validation
  ci-success:
    name: CI Validation Complete
    runs-on: ubuntu-latest
    needs: [validate-commits, lint-and-test, build-test]
    if: always()
    steps:
      - name: Check CI Status
        run: |
          # Check if commit validation was skipped (not a PR) or passed
          COMMIT_VALIDATION_OK="true"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            if [[ "${{ needs.validate-commits.result }}" != "success" ]]; then
              COMMIT_VALIDATION_OK="false"
            fi
          fi

          if [[ "$COMMIT_VALIDATION_OK" == "true" && \
                "${{ needs.lint-and-test.result }}" == "success" && \
                "${{ needs.build-test.result }}" == "success" ]]; then
            echo "✅ All CI validation checks passed!"
            exit 0
          else
            echo "❌ Some CI validation checks failed:"
            if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              echo "  - Validate Commits: ${{ needs.validate-commits.result }}"
            fi
            echo "  - Lint and Test: ${{ needs.lint-and-test.result }}"
            echo "  - Build Test: ${{ needs.build-test.result }}"
            exit 1
          fi
