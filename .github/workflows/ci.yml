name: CI Validation

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: "1.25"
  DAGGER_VERSION: "0.19.2"

permissions:
  contents: read
  pull-requests: read

jobs:
  validate-commits:
    name: Validate Conventional Commits
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Commitlint
        uses: wagoid/commitlint-github-action@v6
        with:
          configFile: .commitlintrc.json

  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Dagger CLI
        run: |
          cd /usr/local
          curl -L https://dl.dagger.io/dagger/install.sh | sh
          dagger version

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run linting via Task
        run: task lint

      - name: Run tests via Task
        run: task test

      - name: Run vulnerability scan via Task
        run: task vulncheck
        continue-on-error: true  # Temporary: Ollama v0.12.6 has unfixed CVEs (see SECURITY.md)

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage.out
          retention-days: 30

  opentofu-validate:
    name: Validate OpenTofu Modules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Terraform-only pre-commit config
        run: cp .pre-commit-config-tofu.yaml .pre-commit-config.yaml

      - name: Validate OpenTofu configuration
        uses: dagger/dagger-for-github@v7
        with:
          version: "latest"
          verb: call
          module: github.com/Smana/daggerverse/pre-commit-tf@pre-commit-tf/v0.1.2
          args: run --dir "." --tf-binary="tofu"

  build-test:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Dagger CLI
        run: |
          cd /usr/local
          curl -L https://dl.dagger.io/dagger/install.sh | sh
          dagger version

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build binary via Task
        run: task build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: scia-binary
          path: ./scia
          retention-days: 7

  # Status check for required validation
  ci-success:
    name: CI Validation Complete
    runs-on: ubuntu-latest
    needs: [validate-commits, lint-and-test, opentofu-validate, build-test]
    if: always()
    steps:
      - name: Check CI Status
        run: |
          # Check if commit validation was skipped (not a PR) or passed
          COMMIT_VALIDATION_OK="true"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            if [[ "${{ needs.validate-commits.result }}" != "success" ]]; then
              COMMIT_VALIDATION_OK="false"
            fi
          fi

          if [[ "$COMMIT_VALIDATION_OK" == "true" && \
                "${{ needs.lint-and-test.result }}" == "success" && \
                "${{ needs.opentofu-validate.result }}" == "success" && \
                "${{ needs.build-test.result }}" == "success" ]]; then
            echo "✅ All CI validation checks passed!"
            exit 0
          else
            echo "❌ Some CI validation checks failed:"
            if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              echo "  - Validate Commits: ${{ needs.validate-commits.result }}"
            fi
            echo "  - Lint and Test: ${{ needs.lint-and-test.result }}"
            echo "  - OpenTofu Validate: ${{ needs.opentofu-validate.result }}"
            echo "  - Build Test: ${{ needs.build-test.result }}"
            exit 1
          fi
