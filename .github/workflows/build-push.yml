name: Release Binaries

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      snapshot:
        description: 'Create snapshot build (no release)'
        required: false
        default: 'false'

env:
  GO_VERSION: "1.25"

permissions:
  contents: write
  packages: write

jobs:
  release-binaries:
    name: Build and Release Binaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full git history for GoReleaser

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Build binaries with GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: ${{ github.event.inputs.snapshot == 'true' && 'release --snapshot --clean' || 'release --clean' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: github.event.inputs.snapshot == 'true'
        with:
          name: binaries-snapshot
          path: dist/
          retention-days: 7

  # Build summary
  release-summary:
    name: Release Summary
    runs-on: ubuntu-latest
    needs: [release-binaries]
    if: always()
    steps:
      - name: Create release summary
        run: |
          echo "## ðŸŽ‰ Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status**: ${{ needs.release-binaries.result }}" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "**Release**: ${{ github.event.release.tag_name }}" >> $GITHUB_STEP_SUMMARY
            echo "**Release URL**: ${{ github.event.release.html_url }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Type**: Snapshot build" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Binaries Built" >> $GITHUB_STEP_SUMMARY
          echo "- Linux: amd64, arm64" >> $GITHUB_STEP_SUMMARY
          echo "- macOS: amd64, arm64" >> $GITHUB_STEP_SUMMARY
          echo "- Windows: amd64, arm64" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Method" >> $GITHUB_STEP_SUMMARY
          echo "- GoReleaser with Taskfile (Dagger) integration" >> $GITHUB_STEP_SUMMARY
